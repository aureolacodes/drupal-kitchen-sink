<?php

/**
 * @file
 * Displays a kitchen sink with multiple template files.
 *
 * Uses template files located in the currently active template's folder to
 * display a kitchen sink. Kitchen sink templates are primarily used to develop
 * the styling of the currently active theme.
 *
 * Template files must be placed in a folder 'kitchen-sink' inside the root of
 * the template folder. Template files can be html or php files.
 */

/**
 * Implements hook_menu().
 */
function kitchen_sink_menu() {
  $items = [];

  $items['kitchen-sink'] = [
    'title' => 'Kitchen Sink',
    'description' => 'Displays a html file defined by the given name.',
    'page callback' => 'kitchen_sink_display_template',
    'page arguments' => ['default'],
    'access arguments' => ['access kitchen sink'],
    'type' => MENU_CALLBACK,
  ];

  $items['kitchen_sink/%'] = $items['kitchen_sink'];
  $items['kitchen_sink/%']['page arguments'] = [1];

  return $items;
}

/**
 * Implements hook_permission().
 */
function kitchen_sink_permission() {
  return [
    'access kitchen sink' => [
      'title' => t('Access kitchen sink'),
      'description' => t('Allow users to access kitchen sink templates.'),
    ],
  ];
}

/**
 * Implements hook_preprocess_page().
 */
function kitchen_sink_preprocess_page(&$vars) {
  if (arg(0) == 'kitchen_sink') {
    $vars['theme_hook_suggestions'][] = 'page__kitchen_sink';
  }
}

/**
 * Displays a html file defined by the given name.
 *
 * @param string $name_raw
 *   Name of the template file. Contains raw user input.
 *
 * @return string
 *   Html template contents.
 */
function kitchen_sink_display_template($name_raw = 'default') {
  $name = preg_replace('[^a-z0-9-]', '', (string) $name_raw);

  $template = kitchen_sink_get_template($name);
  if (file_exists($template)) {
    ob_start();
    include $template;
    $contents = ob_get_contents();
    ob_end_clean();

    return $contents;
  }
  else {
    return t('Unable to find template for %name.', [
      '%name' => $name,
    ]);
  }
}

/**
 * Returns the most likely template file path for the given name.
 *
 * @param string $name
 *   Name of the template file.
 *
 * @return string
 *   Template file path.
 */
function kitchen_sink_get_template($name = 'default') {
  $template_path = kitchen_sink_get_template_path($name, 'php');
  if (file_exists($template_path)) {
    return $template_path;
  }

  $template_path = kitchen_sink_get_template_path($name, 'html');
  if (file_exists($template_path)) {
    return $template_path;
  }

  $template_path = kitchen_sink_get_template_path('default', 'php');
  if (file_exists($template_path)) {
    return $template_path;
  }

  return kitchen_sink_get_template_path('default', 'html');
}

/**
 * Returns a template file's path for a given name and extension.
 *
 * @param string $name
 *   Name of the template file.
 * @param string $extension
 *   Template file extension.
 *
 * @return string
 *   Path to the template file.
 */
function kitchen_sink_get_template_path($name = 'default', $extension = 'html') {
  $templates_path = path_to_theme() . DIRECTORY_SEPARATOR;
  $templates_path .= 'kitchen-sink' . DIRECTORY_SEPARATOR;
  $templates_path .= $name . '.' . $extension;

  return $templates_path;
}
